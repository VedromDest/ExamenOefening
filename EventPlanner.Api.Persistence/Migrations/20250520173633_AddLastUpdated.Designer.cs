// <auto-generated />
using System;
using EventPlanner.Api.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventPlanner.Api.Persistence.Migrations
{
    [DbContext(typeof(EventPlannerDbContext))]
    [Migration("20250520173633_AddLastUpdated")]
    partial class AddLastUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EventPlanner.Api.Persistence.Models.Evenement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EindDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LocatieId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LocatieId");

                    b.ToTable("Evenementen");
                });

            modelBuilder.Entity("EventPlanner.Api.Persistence.Models.Locatie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beschrijving")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<double>("GpsLat")
                        .HasColumnType("double");

                    b.Property<double>("GpsLon")
                        .HasColumnType("double");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Locaties");
                });

            modelBuilder.Entity("EventPlanner.Api.Persistence.Models.Taak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Belangrijkheid")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("DeadlineDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EvenementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvenementId");

                    b.ToTable("Taken");
                });

            modelBuilder.Entity("EventPlanner.Api.Persistence.Models.Evenement", b =>
                {
                    b.HasOne("EventPlanner.Api.Persistence.Models.Locatie", "Locatie")
                        .WithMany("Evenementen")
                        .HasForeignKey("LocatieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locatie");
                });

            modelBuilder.Entity("EventPlanner.Api.Persistence.Models.Taak", b =>
                {
                    b.HasOne("EventPlanner.Api.Persistence.Models.Evenement", "Evenement")
                        .WithMany("Taken")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evenement");
                });

            modelBuilder.Entity("EventPlanner.Api.Persistence.Models.Evenement", b =>
                {
                    b.Navigation("Taken");
                });

            modelBuilder.Entity("EventPlanner.Api.Persistence.Models.Locatie", b =>
                {
                    b.Navigation("Evenementen");
                });
#pragma warning restore 612, 618
        }
    }
}
